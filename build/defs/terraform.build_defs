subinclude("//third_party/defs:terraform")
_upstream_terraform_root = terraform_root

def terraform_root(
    name: str,
    srcs: list,
    var_files: list = [],
    modules: list = [],
    providers: list = [],
    toolchain: str = None,
    labels: list = [],
    visibility: list = [],
    add_default_workflows: bool = True,
    use_remote_state: bool = True,
    remote_state_bucket: str = "vjp-terraform-state",
    pull_request_state_bucket: str = "",
):
    return _upstream_terraform_root(
      name=name, 
      srcs=srcs, 
      var_files=var_files, 
      modules=modules, 
      providers=providers, 
      toolchain=toolchain, 
      labels=labels, 
      add_default_workflows=True,
      additional_workspace_data=["//common/terraform:state_generator"],
      pre_workspace_cmd=f"""
$(out_location //common/terraform:state_generator) \\
    --out_file="remote-state.tf" \\
    --package="$PKG" \\
    --name="{name}" \\
    --default_state_bucket="{remote_state_bucket}" \\
    --pull_request_state_bucket="{pull_request_state_bucket}"
      """,
    )

def terraform_per_account(
  srcs: list,
  provider: str,
  modules: list = [],
):
  subinclude(f"//accounts/{provider}:starlark")

  for account in accounts:
    name = account["name"]
    terraform_root(
      name = name,
      srcs = srcs,
      modules = modules,
      var_files = [
        f"//accounts/{provider}:{name}_tfvars",
      ],
    )
